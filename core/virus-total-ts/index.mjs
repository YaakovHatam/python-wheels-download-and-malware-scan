import fetch from 'node-fetch';
import * as fs from 'fs';
import * as crypto from 'crypto';
import { FormData } from 'formdata-polyfill/esm.min.js'
import { fileFromSync } from 'fetch-blob/from.js'

var callsCounter = 0;
const WAIT_BETWEEN_CALLS = 25;

const delay = seconds => new Promise(res => setTimeout(res, seconds * 1000));

const sha256Convert = file => {
    const fileBuffer = fs.readFileSync(file);
    const hashSum = crypto.createHash('sha256');
    hashSum.update(fileBuffer);
    const hex = hashSum.digest('hex');
    return hex;
};

const BASE_URL = 'https://www.virustotal.com/api/v3';

const METHODS = {
    GET: 'GET',
    POST: 'POST'
}

const ENDPOINTS = {
    'files_get': {
        path: 'files',
        method: METHODS.GET
    },
    'files_post': {
        patH: 'files',
        method: METHODS.POST
    }
}
const a = {

}
const prepareOptions = (endpoint, params) => ({
    method: endpoint.method,
    headers: {
        "x-apikey": process.env.VirusTotalKey,
        ...(endpoint.method === METHODS.POST && { 'Accept': 'application/json' }),
    },
    redirect: 'follow',
    ...(params && params.body && { body: params.body }),
});

const prepareUrl = (endpoint, params) => BASE_URL + '/' + endpoint.path + (endpoint.method === METHODS.GET ? '/' + params.id : '');


const performRequest = (url, options) => fetch(url, options).then(res => res.json());


/**
 * **Get a file report**
 * Retrieve information about a file
 * https://www.virustotal.com/api/v3/files/{id}
 * @param {string} filePath file path
 * @returns {Promise<import("./types/file-object").FileObject>} a file object contains data
 */
const getFileReport = async filePath => {
    const temp = callsCounter;
    await delay(callsCounter++ * WAIT_BETWEEN_CALLS);
    const fileId = sha256Convert(filePath);

    console.log('executing', temp, 'sha: ', fileId)

    const options = prepareOptions(ENDPOINTS.files_get);
    const url = prepareUrl(ENDPOINTS.files_get, { id: fileId });
    return performRequest(url, options);
}

/**
 * **Upload a file**
 * Upload and analyse a file
 * https://www.virustotal.com/api/v3/files
 * @param {string} filePath file path
 */
const postFileReport = async filePath => {
    const temp = callsCounter;
    await delay(callsCounter++ * WAIT_BETWEEN_CALLS);

    console.log('executing', temp)

    const form = new FormData();
    const file = fileFromSync(filePath)
    form.append('file', file);

    const options = prepareOptions(ENDPOINTS.files_post, { body: form });
    const url = prepareUrl(ENDPOINTS.files_post);
    return performRequest(url, options);
}

export {
    getFileReport,
    postFileReport
}